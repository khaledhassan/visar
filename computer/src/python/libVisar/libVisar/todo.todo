- Move the drawables to the OpenGL package
- Make the targets "glow" (Animated texture? Animate somehow)
- Help Val with Action class
- Add map (Use Targets to figure out how to do live-updating map texture)

OVERALL:
    - Figure out how to handle spatial positioning of UI
    - Remove errors from import the transformations


DISTORTION:
    - Must do manual calibration of the texture size/scaling, this has been causing issues
        -- Have not tried using the Rift's exact recommended shaders (since we don't need to correct for motion)
        >> I suspect the problem has to do with the use of tan-eye coordinates. Should not be assuming manifold
    - Turn off warnings from vispy for loading discontinuous data (Lots of errors)
    - Make Context and Drawable translate() functions behave the same or add a set_view, set_model thing

MAP:   
    Goals:
    - Buffering non-visible sections
    - Piece-wise loading
    - Allow the user to leave the prepared region
    - Come up with a better cacheing scheme
    - Add the ability to move (at all)
    - Rotate to look cooler (Facing in toward the user's eyes?)

MENU:
    - Text has weird white outline
    - Add partial transparency
    - Reduce aliasing

TARGETS:
    - Make overlay appear above everything
        Options:
        -- Ignore depth-buffer
        -- Use a third "overlay" context distinct from UI and world objects
        -- NOTE: Without environments, these make no difference



Val; is there a reason not using Vispy text rendering?
Val; Create a human-readable menu configuration file
Val; Add capability for drawing menu title in menu`

Jacob; Try different target shapes
--> Use a picture of Mike's face as the object indicator
